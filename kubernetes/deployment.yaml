apiVersion: apps/v1
kind: Deployment
metadata:
    name: api-gateway
    namespace: ecommerce
    labels:
        app: api-gateway
        component: gateway
    annotations:
        description: "API Gateway Deployment"
        version: "1.0"
spec:
    replicas: 1
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
    selector:
        matchLabels:
            app: api-gateway
    template:
        metadata:
            labels:
                app: api-gateway
                component: gateway
            annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8000"
        spec:
            securityContext:
                runAsNonRoot: true
                runAsUser: 1000
                runAsGroup: 3000
                fsGroup: 2000
            containers:
                - name: api-gateway
                  image: api-gateway:1.0
                  imagePullPolicy: Never
                  ports:
                      - containerPort: 8000
                  env:
                      - name: NODE_ENV
                        value: "development"
                      - name: PORT
                        value: "8000"
                      - name: JWT_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: api-gateway-secrets
                                key: jwt-secret
                      - name: SERVICE_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: api-gateway-secrets
                                key: service-secret
                      - name: USER_SERVICE_URL
                        value: "http://user-service:8081"
                      - name: PRODUCT_SERVICE_URL
                        value: "http://product-service:8082"
                      - name: ORDER_SERVICE_URL
                        value: "http://order-service:8083"
                      - name: PAYMENT_SERVICE_URL
                        value: "http://payment-service:8084"
                      - name: NOTIFICATION_SERVICE_URL
                        value: "http://notification-service:8085"
                      - name: RATE_LIMIT_WINDOW_MS
                        value: "900000"
                      - name: RATE_LIMIT_MAX
                        value: "100"
                      - name: LOG_LEVEL
                        value: "debug"
                      - name: CORS_ORIGIN
                        value: "*"
                      - name: CORS_METHODS
                        value: "GET,HEAD,PUT,PATCH,POST,DELETE"
                  resources:
                      requests:
                          memory: "256Mi"
                          cpu: "200m"
                      limits:
                          memory: "512Mi"
                          cpu: "500m"
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 8000
                      initialDelaySeconds: 30
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: 8000
                      initialDelaySeconds: 5
                      periodSeconds: 5
                  startupProbe:
                      httpGet:
                          path: /health
                          port: 8000
                      initialDelaySeconds: 10
                      periodSeconds: 5
                  securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                          drop:
                              - ALL
                      readOnlyRootFilesystem: true
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 100
                          podAffinityTerm:
                              labelSelector:
                                  matchExpressions:
                                      - key: app
                                        operator: In
                                        values:
                                            - api-gateway
                              topologyKey: kubernetes.io/hostname
